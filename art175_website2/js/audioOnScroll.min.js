// Attributes
	//https://codepen.io/tutsplus/pen/yppgrm
	//Attributes End -->

// makes the js files work with the html files
 window.onload = function(){ 


// context var makes it possible for autoplaying audio on chrome/but will only be activated after user input like a mouse click

 	var context = new (window.AudioContext || window.webkitAudioContext)();
context.resume().then(() => {
    console.log('Playback resumed successfully'); //if context is successful
  });



 var statusText = document.getElementById("statusText"); //getting text element from html page
var audioElm = document.getElementById("soundTour"); //getting audio element from html page
 var playing = false; //begins with audio off unless in designated target areas




 function handler(entries, observer) { //handler function
  for (entry of entries) {
     console.log(entry); //when the target is or isn't in viewport

     statusText.textContent = entry.isIntersecting; //statusText is equal to intersection target

    if (entry.isIntersecting) { //if target is in view
       audioElm.play(); //play audio
       playing = true; //status of target is true
     } else { //if target isn't in view
       audioElm.pause(); //pause audio
       playing = false;// statis of target is false
     }
   }
 }

//    invokes the handler whenever:
//    1. Any part of the target enters the viewport
//    2. The last part of the target leaves the viewport */
 
 let observer = new IntersectionObserver(handler);
 observer.observe(document.getElementById('target'));


 



//new song, same as above code but ids, target areas and targets with an identifying number for new audio. 


var audioElm1 = document.getElementById("soundTour1");
 var playing = false;



 function handler1(entries, observer1) {
  for (entry1 of entries) {
     console.log(entry1);

     statusText.textContent = entry1.isIntersecting;

    if (entry1.isIntersecting) {
       audioElm1.play();
       playing = true;
     } else {
       audioElm1.pause();
       playing = false;
     }
   }
 }

 
 let observer1 = new IntersectionObserver(handler1);
 observer1.observe(document.getElementById('target1'));

//new song


var audioElm2 = document.getElementById("soundTour2");
 var playing = false;



 function handler2(entries, observer2) {
  for (entry2 of entries) {
     console.log(entry2);

     statusText.textContent = entry2.isIntersecting;

    if (entry2.isIntersecting) {
       audioElm2.play();
       playing = true;
     } else {
       audioElm2.pause();
       playing = false;
     }
   }
 }

 
 let observer2 = new IntersectionObserver(handler2);
 observer2.observe(document.getElementById('target2'));



//New song


var audioElm3 = document.getElementById("soundTour3");
 var playing = false;



 function handler3(entries, observer3) {
  for (entry3 of entries) {
     console.log(entry3);

     statusText.textContent = entry3.isIntersecting;

    if (entry3.isIntersecting) {
       audioElm3.play();
       playing = true;
     } else {
       audioElm3.pause();
       playing = false;
     }
   }
 }

 
 let observer3 = new IntersectionObserver(handler3);
 observer3.observe(document.getElementById('target3'));

 //New song


var audioElm4 = document.getElementById("soundTour4");
 var playing = false;



 function handler4(entries, observer4) {
  for (entry4 of entries) {
     console.log(entry4);

     statusText.textContent = entry4.isIntersecting;

    if (entry4.isIntersecting) {
       audioElm4.play();
       playing = true;
     } else {
       audioElm4.pause();
       playing = false;
     }
   }
 }

 
 let observer4 = new IntersectionObserver(handler4);
 observer4.observe(document.getElementById('target4'));





 //New song


var audioElm5 = document.getElementById("soundTour5");
 var playing = false;



 function handler5(entries, observer5) {
  for (entry5 of entries) {
     console.log(entry5);

     statusText.textContent = entry5.isIntersecting;

    if (entry5.isIntersecting) {
       audioElm5.play();
       playing = true;
     } else {
       audioElm5.pause();
       playing = false;
     }
   }
 }

 
 let observer5 = new IntersectionObserver(handler5);
 observer5.observe(document.getElementById('target5'));


 //New song


var audioElm6 = document.getElementById("soundTour6");
 var playing = false;



 function handler6(entries, observer6) {
  for (entry6 of entries) {
     console.log(entry6);

     statusText.textContent = entry6.isIntersecting;

    if (entry6.isIntersecting) {
       audioElm6.play();
       playing = true;
     } else {
       audioElm6.pause();
       playing = false;
     }
   }
 }

 
 let observer6 = new IntersectionObserver(handler6);
 observer6.observe(document.getElementById('target6'));


 //New song


var audioElm7 = document.getElementById("soundTour7");
 var playing = false;



 function handler7(entries, observer7) {
  for (entry7 of entries) {
     console.log(entry7);

     statusText.textContent = entry7.isIntersecting;

    if (entry7.isIntersecting) {
       audioElm7.play();
       playing = true;
     } else {
       audioElm7.pause();
       playing = false;
     }
   }
 }

 
 let observer7 = new IntersectionObserver(handler7);
 observer7.observe(document.getElementById('target7'));



 //New song


var audioElm8 = document.getElementById("soundTour8");
 var playing = false;



 function handler8(entries, observer8) {
  for (entry8 of entries) {
     console.log(entry8);

     statusText.textContent = entry8.isIntersecting;

    if (entry8.isIntersecting) {
       audioElm8.play();
       playing = true;
     } else {
       audioElm8.pause();
       playing = false;
     }
   }
 }

 
 let observer8 = new IntersectionObserver(handler8);
 observer8.observe(document.getElementById('target8'));



 //New song


var audioElm9 = document.getElementById("soundTour9");
 var playing = false;



 function handler9(entries, observer9) {
  for (entry9 of entries) {
     console.log(entry9);

     statusText.textContent = entry9.isIntersecting;

    if (entry9.isIntersecting) {
       audioElm9.play();
       playing = true;
     } else {
       audioElm9.pause();
       playing = false;
     }
   }
 }

 
 let observer9 = new IntersectionObserver(handler9);
 observer9.observe(document.getElementById('target9'));


 
 



//New song


var audioElm11 = document.getElementById("soundTour11");
 var playing = false;



 function handler11(entries, observer11) {
  for (entry11 of entries) {
     console.log(entry11);

     statusText.textContent = entry11.isIntersecting;

    if (entry11.isIntersecting) {
       audioElm11.play();
       playing = true;
     } else {
       audioElm11.pause();
       playing = false;
     }
   }
 }

 
 let observer11 = new IntersectionObserver(handler11);
 observer11.observe(document.getElementById('target11'));


//New song


var audioElm12 = document.getElementById("soundTour12");
 var playing = false;



 function handler12(entries, observer12) {
  for (entry12 of entries) {
     console.log(entry12);

     statusText.textContent = entry12.isIntersecting;

    if (entry12.isIntersecting) {
       audioElm12.play();
       playing = true;
     } else {
       audioElm12.pause();
       playing = false;
     }
   }
 }

 
 let observer12 = new IntersectionObserver(handler12);
 observer12.observe(document.getElementById('target12'));

 //New song


var audioElm13 = document.getElementById("soundTour13");
 var playing = false;



 function handler13(entries, observer13) {
  for (entry13 of entries) {
     console.log(entry13);

     statusText.textContent = entry13.isIntersecting;

    if (entry13.isIntersecting) {
       audioElm13.play();
       playing = true;
     } else {
       audioElm13.pause();
       playing = false;
     }
   }
 }

 
 let observer13 = new IntersectionObserver(handler13);
 observer13.observe(document.getElementById('target13'));


 //New song


var audioElm14 = document.getElementById("soundTour14");
 var playing = false;



 function handler14(entries, observer13) {
  for (entry14 of entries) {
     console.log(entry14);

     statusText.textContent = entry14.isIntersecting;

    if (entry14.isIntersecting) {
       audioElm14.play();
       playing = true;
     } else {
       audioElm14.pause();
       playing = false;
     }
   }
 }

 
 let observer14 = new IntersectionObserver(handler14);
 observer14.observe(document.getElementById('target14'));


 //New song


var audioElm15 = document.getElementById("soundTour15");
 var playing = false;



 function handler15(entries, observer15) {
  for (entry15 of entries) {
     console.log(entry15);

     statusText.textContent = entry15.isIntersecting;

    if (entry15.isIntersecting) {
       audioElm15.play();
       playing = true;
     } else {
       audioElm15.pause();
       playing = false;
     }
   }
 }

 
 let observer15 = new IntersectionObserver(handler15);
 observer15.observe(document.getElementById('target15'));










};
 


 